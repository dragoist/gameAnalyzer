# Generated by Django 4.2.5 on 2023-10-17 14:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameID', models.CharField(max_length=30, unique=True)),
                ('competition', models.CharField(max_length=511)),
                ('date', models.DateField()),
                ('patch', models.CharField(max_length=8)),
                ('gameLength', models.DurationField()),
                ('winnerTeam', models.CharField(max_length=16)),
                ('teamB', models.CharField(max_length=16)),
                ('teamR', models.CharField(max_length=16)),
                ('topB', models.CharField(max_length=80)),
                ('jglB', models.CharField(max_length=80)),
                ('midB', models.CharField(max_length=80)),
                ('botB', models.CharField(max_length=80)),
                ('supB', models.CharField(max_length=80)),
                ('topR', models.CharField(max_length=80)),
                ('jlgR', models.CharField(max_length=80)),
                ('midR', models.CharField(max_length=80)),
                ('botR', models.CharField(max_length=80)),
                ('supR', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summonerName', models.CharField(max_length=32)),
                ('playerCode', models.CharField(max_length=80)),
                ('role', models.CharField(blank=True, choices=[('top', 'toplaner'), ('jgl', 'jungler'), ('mid', 'midlaner'), ('bot', 'botlaner'), ('sup', 'support')], max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('triCode', models.CharField(max_length=16)),
                ('competition', models.CharField(max_length=511)),
            ],
            options={
                'unique_together': {('triCode', 'competition')},
            },
        ),
        migrations.CreateModel(
            name='Towers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lane', models.CharField(choices=[('bot', 'botlane'), ('mid', 'midlane'), ('top', 'toplane')], max_length=16)),
                ('assistants', models.TextField(blank=True, null=True)),
                ('time', models.DurationField()),
                ('gameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.game')),
                ('killer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.teams')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.teams'),
        ),
        migrations.CreateModel(
            name='Plates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lane', models.CharField(choices=[('bot', 'botlane'), ('mid', 'midlane'), ('top', 'toplane')], max_length=16)),
                ('assistants', models.TextField(blank=True, null=True)),
                ('time', models.DurationField()),
                ('gameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.game')),
                ('killer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.teams')),
            ],
        ),
        migrations.CreateModel(
            name='Heralds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DurationField()),
                ('gameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.game')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.teams')),
            ],
        ),
        migrations.CreateModel(
            name='FirstBlood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assistants', models.TextField(blank=True, null=True)),
                ('time', models.DurationField()),
                ('gameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.game')),
                ('killer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.teams')),
            ],
        ),
        migrations.CreateModel(
            name='Drakes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drakeType', models.CharField(max_length=24)),
                ('time', models.DurationField()),
                ('gameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.game')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.teams')),
            ],
        ),
        migrations.CreateModel(
            name='Barons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DurationField()),
                ('gameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.game')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.teams')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTimeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.CharField(max_length=16)),
                ('side', models.CharField(choices=[('B', 'blue'), ('R', 'red')], max_length=1)),
                ('role', models.CharField(blank=True, choices=[('top', 'toplaner'), ('jgl', 'jungler'), ('mid', 'midlaner'), ('bot', 'botlaner'), ('sup', 'support')], max_length=16)),
                ('champ', models.CharField(max_length=24)),
                ('time', models.IntegerField()),
                ('kills', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('deaths', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('assists', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('gold', models.FloatField()),
                ('minions', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('exp', models.FloatField()),
                ('gameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.player')),
            ],
            options={
                'unique_together': {('gameID', 'player', 'time')},
            },
        ),
        migrations.CreateModel(
            name='PlayerEndGameStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, choices=[('top', 'toplaner'), ('jgl', 'jungler'), ('mid', 'midlaner'), ('bot', 'botlaner'), ('sup', 'support')], max_length=16)),
                ('team', models.CharField(max_length=16)),
                ('side', models.CharField(choices=[('B', 'blue'), ('R', 'red')], max_length=1)),
                ('kills', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('deaths', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('assists', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('gold', models.FloatField()),
                ('minions', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('wardPlaced', models.IntegerField()),
                ('wardKilled', models.IntegerField()),
                ('visionScore', models.IntegerField()),
                ('DMGtoChamps', models.FloatField()),
                ('DMGtoTowers', models.FloatField()),
                ('gameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.player')),
            ],
            options={
                'unique_together': {('gameID', 'player')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='player',
            unique_together={('summonerName', 'playerCode', 'team')},
        ),
        migrations.CreateModel(
            name='Draft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.CharField(choices=[('B', 'blue'), ('R', 'red')], max_length=1)),
                ('ban1', models.CharField(max_length=24)),
                ('ban2', models.CharField(max_length=24)),
                ('ban3', models.CharField(max_length=24)),
                ('ban4', models.CharField(max_length=24)),
                ('ban5', models.CharField(max_length=24)),
                ('pick1', models.CharField(max_length=24)),
                ('pick2', models.CharField(max_length=24)),
                ('pick3', models.CharField(max_length=24)),
                ('pick4', models.CharField(max_length=24)),
                ('pick5', models.CharField(max_length=24)),
                ('top', models.CharField(max_length=24)),
                ('jgl', models.CharField(max_length=24)),
                ('mid', models.CharField(max_length=24)),
                ('bot', models.CharField(max_length=24)),
                ('sup', models.CharField(max_length=24)),
                ('gameID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.game')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataPortal.teams')),
            ],
            options={
                'unique_together': {('gameID', 'side')},
            },
        ),
    ]
